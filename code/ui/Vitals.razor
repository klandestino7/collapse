@using System;
@using Sandbox;
@using Sandbox.UI;
@using NxtStudio.Collapse;

@namespace NxtStudio.Collapse.UI
@attribute [StyleSheet( "/ui/Vitals.scss" )]
@inherits Panel

@{
    var player = CollapsePlayer.Me;
    if ( !player.IsValid() ) return;
}

<root>
    <div class="stat health @GetStatClass( Health, player.MaxHealth )">
        <i class="icon">monitor_heart</i>
        <label class="value">@(Health)</label>
    </div>

    <div class="stat stamina @GetStatClass( Stamina, player.MaxStamina )">
        <i class="icon">bolt</i>
        <label class="value">@(Stamina)</label>
    </div>

    <div class="stat calories @GetStatClass( Calories, player.MaxCalories )">
        <i class="icon">lunch_dining</i>
        <label class="value">@(Calories)</label>
    </div>

    <div class="stat hydration @GetStatClass( Hydration, player.MaxHydration )">
        <i class="icon">water_drop</i>
        <label class="value">@(Hydration)</label>
    </div>

    <div class="stat temperature @GetTemperatureClass( Temperature )">
        <i class="icon">thermostat</i>
        <label class="value">@(Temperature)&deg;C</label>
    </div>
</root>

@code
{
    private int Health => CollapsePlayer.Me.Health.CeilToInt();
    private int Stamina => CollapsePlayer.Me.Stamina.CeilToInt();
    private int Calories => CollapsePlayer.Me.Calories.CeilToInt();
    private int Hydration => CollapsePlayer.Me.Hydration.CeilToInt();
    private int Temperature => CollapsePlayer.Me.Temperature.CeilToInt();

    protected override int BuildHash()
    {
        if ( !CollapsePlayer.Me.IsValid() ) return 0;
        return HashCode.Combine( CollapsePlayer.Me, Health, Stamina, Temperature, Calories, Hydration );
    }

    private string GetStatClass( int currentValue, float maxValue )
    {
        var me = CollapsePlayer.Me;
        if ( currentValue == 0 ) return "empty";
        return (currentValue < maxValue * 0.2f ? "low" : "");
    }

    private string GetTemperatureClass( int currentValue )
    {
        var me = CollapsePlayer.Me;
        if ( currentValue > 20 ) return "very-hot";
        if ( currentValue > 10 ) return "warm";
        if ( currentValue < -10 ) return "very-cold";
        if ( currentValue < 3 ) return "cold";
        return "";
    }
}
